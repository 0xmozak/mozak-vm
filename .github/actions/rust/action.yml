name: Install rust toolchain

inputs:
  cache-key:
    required: false

runs:
  using: "composite"
  steps:
    - id: rust-version
      name: Get rust version
      shell: bash
      run: echo "RUST_VERSION=$(cat rust-toolchain.toml| grep '^channel\s*=' | cut -d '=' -f2 | sed 's/"//g' | sed -e 's/^[ \t]*//')" >> "$GITHUB_OUTPUT"

    - id: local-cache-restore
      name: Cache Rust toolchain (Local Restore)
      shell: bash
      run: |
        PRIMARY_KEY="toolchain-${{ runner.os }}-${{ runner.arch }}-${{ steps.rust-version.outputs.RUST_VERSION }}"
        echo "primary-key=${PRIMARY_KEY}" >> "$GITHUB_OUTPUT"
        if [ -f "${{ runner.tool_cache }}/${PRIMARY_KEY}.tar.gz" ]; then
          tar -xzvf "${{ runner.tool_cache }}/${PRIMARY_KEY}.tar.gz"
          echo "cache-hit=true" >> "$GITHUB_OUTPUT"
        else
          echo "cache-hit=false" >> "$GITHUB_OUTPUT"
        fi

    - id: remote-cache-restore
      name: Cache Rust toolchain (Remote Restore)
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.rustup
          ~/.cargo
        key: toolchain-${{ runner.os }}-${{ runner.arch }}-${{ steps.rust-version.outputs.RUST_VERSION }}

    - name: Restore Path
      if: ${{ steps.local-cache-restore.outputs.cache-hit || steps.remote-cache-restore.outputs.cache-hit }}
      shell: bash
      run: echo "~/.cargo/bin" >> $GITHUB_PATH

    - name: Install toolchain
      if: ${{ steps.local-cache-restore.outputs.cache-hit != 'true' && steps.remote-cache-restore.outputs.cache-hit != 'true' }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.rust-version.outputs.RUST_VERSION }}
        components: rustfmt, clippy

    - name: Debug 1
      shell: bash
      run: echo ${PATH}

    - name: Debug 2
      shell: bash
      run: rustc -vV

    - name: Install nextest
      if: ${{ steps.local-cache-restore.outputs.cache-hit != 'true' && steps.remote-cache-restore.outputs.cache-hit != 'true' }}
      uses: taiki-e/install-action@nextest

    - id: local-cache-save
      name: Cache Rust toolchain (Local Save)
      shell: bash
      run: |
        tar -czvf "${{ runner.tool_cache }}/${{ steps.local-cache-restore.outputs.cache-primary-key }}.tar.gz" ~/.rustup ~/.cargo
        ls -la "${{ runner.tool_cache }}/${{ steps.local-cache-restore.outputs.cache-primary-key }}.tar.gz"

    - id: remote-cache-save
      name: Cache Rust toolchain (Save)
      if: ${{ steps.remote-cache-restore.outputs.cache-hit != 'true' }}
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.rustup
          ~/.cargo
        key: ${{ steps.remote-cache-restore.outputs.cache-primary-key }}

    - uses: Swatinem/rust-cache@v2
      if: ${{ inputs.cache-key != '' }}
      with:
        prefix-key: ${{ inputs.cache-key }}

    - uses: Swatinem/rust-cache@v2
      if: ${{ inputs.cache-key == '' }}
