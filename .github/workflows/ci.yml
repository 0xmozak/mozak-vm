name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  check-runner:
    uses: ./.github/workflows/check-runner.yml
    secrets: inherit

  cargo-test:
    strategy:
      matrix:
        profile: [test, release]
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install CI deps
        uses: ./.github/actions/ci-deps
        with:
          runner-label: ${{ needs.check-runner.outputs.runner-label }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile and archive all the tests
        run: nice cargo nextest archive --cargo-profile="${{ matrix.profile }}" --locked --features="enable_poseidon_starks" --all-targets --archive-file mozak-vm-tests.tar.zst

      - name: Run all the tests from the archive
        run: MOZAK_STARK_DEBUG=true nice cargo nextest run --cargo-profile="${{ matrix.profile }}" --no-fail-fast --archive-file mozak-vm-tests.tar.zst

  run-examples:
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install CI deps
        uses: ./.github/actions/ci-deps
        with:
          runner-label: ${{ needs.check-runner.outputs.runner-label }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and run examples
        run: |
          cd examples && nice cargo build --release
          cd .. && nice ./run_examples.sh

  cargo-clippy:
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install CI deps
        uses: ./.github/actions/ci-deps
        with:
          runner-label: ${{ needs.check-runner.outputs.runner-label }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Clippy linter
        run: cargo clippy --all-features --all-targets -- -D warnings

      - name: Run Clippy linter for sdk
        working-directory: sdk
        run: cargo clippy --all-features -- -D warnings

  cargo-build-examples:
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install CI deps
        uses: ./.github/actions/ci-deps
        with:
          runner-label: ${{ needs.check-runner.outputs.runner-label }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build all examples
        run: |
          cd examples-builder && cargo build --all-features

  cargo-fmt:
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install CI deps
        uses: ./.github/actions/ci-deps
        with:
          runner-label: ${{ needs.check-runner.outputs.runner-label }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run fmt
        run: cargo fmt --all --check

  shellcheck:
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Run shellcheck and shfmt
        uses: luizm/action-sh-checker@v0.8.0
        env:
          SHFMT_OPTS: --indent 4 --case-indent

  taplo-fmt:
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install CI deps
        uses: ./.github/actions/ci-deps
        with:
          runner-label: ${{ needs.check-runner.outputs.runner-label }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: taplo fmt
        run: taplo fmt --check
