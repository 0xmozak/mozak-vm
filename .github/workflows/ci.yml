name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  check-runner:
    uses: ./.github/workflows/check-runner.yml
    secrets: inherit

  cargo-test:
    if: github.event.pull_request.draft == false
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install rust toolkit
        uses: ./.github/actions/rust

      - name: Build fibonacci ELF for benchmarking
        working-directory: examples/fibonacci
        run: cargo build --release

      - name: Build fibonacci-input ELF for benchmarking
        working-directory: examples/fibonacci-input
        run: cargo build --release

      - name: Compile
        run: cargo nextest run --no-run --locked --all-targets

      - name: Test
        run: MOZAK_STARK_DEBUG=true cargo nextest run --locked --all-targets

  cargo-clippy:
    if: github.event.pull_request.draft == false
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install rust toolkit
        uses: ./.github/actions/rust

      - name: Run Clippy linter
        run: cargo clippy --all-features --all-targets -- -D warnings

      - name: Run Clippy linter for sdk
        working-directory: sdk
        run: cargo clippy --all-features -- -D warnings

  cargo-build-examples:
    if: github.event.pull_request.draft == false
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install rust toolkit
        uses: ./.github/actions/rust

      - name: Build all examples
        run: |
          cd examples
          git ls-files -z '*/Cargo.toml' | xargs -0 --max-args=1 -- cargo build --manifest-path

  cargo-fmt:
    if: github.event.pull_request.draft == false
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install rust toolkit
        uses: ./.github/actions/rust

      - name: Run fmt
        run: cargo fmt --all --check

  taplo-fmt:
    if: github.event.pull_request.draft == false
    needs: check-runner
    runs-on: ${{ needs.check-runner.outputs.runner-label }}
    steps:
      - uses: actions/checkout@v4

      - name: Install taplo-cli
        run: |
          curl -fsSL https://github.com/tamasfe/taplo/releases/latest/download/taplo-linux-x86_64.gz | \
            gzip -d - | install -m 755 /dev/stdin /usr/local/bin/taplo

      - name: taplo fmt
        run: taplo fmt --check
